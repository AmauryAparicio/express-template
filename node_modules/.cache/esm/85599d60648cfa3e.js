"use strict";;let templates,editJsonFile,exec;_648‍.x([["isValidTemplate",()=>isValidTemplate],["editPackageJson",()=>editPackageJson],["installNodeModules",()=>installNodeModules]]);_648‍.w("./templateMapping",[["templateMapping",["templates"],function(v){templates=v}]]);_648‍.w("edit-json-file",[["default",["editJsonFile"],function(v){editJsonFile=v}]]);_648‍.w("execa",[["default",["exec"],function(v){exec=v}]]);





       function isValidTemplate(template, choices) {
  if (choices.includes(template)) {
    return template;
  } else {
    if (templates[template]) {
      return templates[template];
    } else {
      throw new Error(
        `Template ${template} does not exist. Please input a valid template or select from list`
      );
    }
  }
}

       function editPackageJson(path, projectName) {
  let file = editJsonFile(path, { autosave: true });
  file.set("name", projectName);
  return;
}

       async function installNodeModules(pkgManager, path) {
  const result = await exec(pkgManager, ["install"], {
    cwd: path,
    stdio: "inherit",
  });
  return result;
}
